name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Environment variables available to all jobs and steps in this workflow
env:
  K3D_VERSION: 4.4.7
  KUBECTL_VERSION: 1.21.2
  KUSTOMIZE_VERSION: 4.1.3

jobs:
  test:
    name: 'Test'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.9
        terraform_wrapper: false

    - name: 'Terraform Format'
      id: fmt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: terraform fmt

    - name: 'Terraform Init'
      id: init
      run: terraform init

    - name: 'Terraform Validate'
      id: validate
      run: terraform validate -no-color

    - name: 'Terraform Security Scan'
      if: github.event_name == 'pull_request'
      uses: aquasecurity/tfsec-pr-commenter-action@main
      with:
        github_token: ${{ github.token }}

    - name: Dependencies
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/bin/

        # install kubectl
        curl -L https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o ${GITHUB_WORKSPACE}/bin/kubectl && chmod +x ${GITHUB_WORKSPACE}/bin/kubectl

        # install kustomize
        curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz -o kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && tar -zxvf kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && chmod +x kustomize && mv kustomize ${GITHUB_WORKSPACE}/bin/kustomize

        # install k3d
        curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v${K3D_VERSION} bash

        # install taskfile
        curl -sL https://taskfile.dev/install.sh | sh

        # install yq
        sudo snap install yq

    - name: GitHub Path
      run: |
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

    - name: Create the k3d cluster
      run: |
        task k3d:create

    - name: Test with the k3d cluster
      run: |
        task k3d:test

    - name: Destroy the k3d cluster
      run: |
        task k3d:destroy
